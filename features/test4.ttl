@base <https://app.lyncex.com/text#> .
@prefix lcx: <https://lyncex.com/lyncex#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix cnt: <http://www.w3.org/2011/content#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<Book>
    a rdfs:Class .

<name>
    a rdf:Property ;
    rdfs:domain <Book> ;
    rdfs:range xsd:string .

<BookValidation>
    a rdfs:Class .

<xname>
    a rdf:Property ;
    rdfs:domain <BookValidation> ;
    lcx:validation "^[A-Z][a-z]+$" ;
    lcx:code_validation "validation(X) :- atom_length(X, N), N<20." .

<BookMultiply>
    a rdfs:Class .

<author>
    a rdf:Property ;
    rdfs:domain <BookMultiply> ;
    lcx:multiple true.

<TemplateApp>
    a lcx:Application ;
    lcx:prefix [
        a lcx:Prefix ;
        lcx:namespace "http://xmlns.com/foaf/0.2/" ;
        lcx:prefix_name "foaf2" 
    ] ;
    lcx:controller <ProcessFormController> ;
    lcx:controller <BookController> ;
    lcx:controller <ProcessFormControllerValidation> ;
    lcx:controller <BookValidController> ;
    lcx:controller <ProcessFormMultiple> ;
    lcx:controller <BookMultiple> .

<ProcessFormController>
    a lcx:FormController ;
    lcx:url "form1" ;
    lcx:base_subject "https://app.lyncex.com/book/" ;
    lcx:class <Book> ;
    lcx:template [
        a cnt:ContentAsText ;
        cnt:chars "{% unescape form %}"
    ] .

<ProcessFormControllerValidation>
    a lcx:FormController ;
    lcx:url "form2" ;
    lcx:base_subject "https://app.lyncex.com/book/" ;
    lcx:class <BookValidation> ;
    lcx:template [
        a cnt:ContentAsText ;
        cnt:chars "{% unescape form %}"
    ] .

<ProcessFormMultiple>
    a lcx:FormController ;
    lcx:url "form3" ;
    lcx:base_subject "https://app.lyncex.com/book/" ;
    lcx:class <BookMultiply> ;
    lcx:template [
        a cnt:ContentAsText ;
        cnt:chars "{% unescape form %}"
    ] .

<BookMultiple>
    a lcx:TemplateController ;
    lcx:url "book3" ;
    lcx:method "get" ;
    lcx:template [
        a cnt:ContentAsText ;
        cnt:chars "<b>Authors: </b>{% each authors, author %}{{ author }},{% end %}"
    ] ;
    lcx:parameter [
        a lcx:Parameter ;
        lcx:param_name "id"
    ] ;
    lcx:handler [
        a lcx:Handler ;
        lcx:handler_name "authors" ;
        lcx:code "handler(Param, Output) :- get_dict(id, Param, Id), atom_concat('https://app.lyncex.com/book/', Id, Book), findall(Author, db(Book, 'https://app.lyncex.com/author', Author), Output)."
    ] .

<BookController>
    a lcx:TemplateController ;
    lcx:url "book" ;
    lcx:method "get" ;
    lcx:template [
        a cnt:ContentAsText ;
        cnt:chars "<b>Name: </b>{{ book.name }}"
    ] ;
    lcx:query [
        a lcx:Query ;
        lcx:query_name "book" ;
        lcx:template_subject "https://app.lyncex.com/book/{{ id }}"
    ] ;
    lcx:parameter [
        a lcx:Parameter ;
        lcx:param_name "id"
    ] .

<BookValidController>
    a lcx:TemplateController ;
    lcx:url "book2" ;
    lcx:method "get" ;
    lcx:template [
        a cnt:ContentAsText ;
        cnt:chars "<b>Name: </b>{{ book.xname }}"
    ] ;
    lcx:query [
        a lcx:Query ;
        lcx:query_name "book" ;
        lcx:template_subject "https://app.lyncex.com/book/{{ id }}"
    ] ;
    lcx:parameter [
        a lcx:Parameter ;
        lcx:param_name "id"
    ] .