@startuml

title Form Controller (GET)

actor User
participant HTTP
participant FormController
database RDF
participant SimpleTemplate
participant Parameter
participant PCRE
participant Prolog

User -> HTTP: GET /user
ref over HTTP: Check Access
HTTP -> FormController: form_controller(RequestPath, Request)
loop Path != RequestPath
    FormController -> RDF: rdf(Controller, 'lyncex:FormController')
    RDF -> FormController: Controller, Path, Template, Class
end

FormController -> Parameter: process_parameters(Request)
Parameter -> RDF: rdf(Parameter, 'lyncex:validation')
RDF -> Parameter: ValidationRegex
alt ValidationRegex exists
    Parameter -> PCRE: re_match(ParameterValue, ValidationRegex)
end
Parameter -> RDF: rdf(Parameter, 'lyncex:code')
RDF -> Parameter: ValidationCode
alt ValidationCode exists
    Parameter -> Prolog: call(ValidationCode)
end
Parameter -> FormController: Parameters

FormController -> RDF: rdf(Class, Property)
RDF -> FormController: Properties

FormController -> FormController: render_form(Class, Properties)

ref over FormController: Resolve Query

ref over FormController: Resolve Handler

FormController -> SimpleTemplate: render_template(Template, Parameters, HandlerOutput, QueryOutput)
SimpleTemplate -> FormController: HTMLOutput

FormController -> HTTP: Response(HTMLOutput, text/html)
HTTP -> User: HTTP response with HTML data

@enduml